{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","sortTypeF","isReversed","isReversedF","visibleGoods","goods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","booleanReset","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAA8BC,mBAASH,EAASI,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA7BD,SACLC,EACAL,EACAE,GAEA,IAAME,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITV,GACFE,EAAaS,UAGRT,EAOcU,CAAkBlB,EAAiBI,EAAUE,GAC5Da,EAAef,IAAaL,EAASI,MAAQG,EAEnD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYlB,IAAaL,EAASc,WAGxCU,QAAS,WACPlB,EAAUN,EAASc,WATvB,iCAeA,wBACEQ,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYlB,IAAaL,EAASgB,SAGxCQ,QAAS,WACPlB,EAAUN,EAASgB,SATvB,4BAgBA,wBACEM,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,YAA2B,IAAfhB,IAGlBiB,QAAS,WACPhB,GAAaD,IATjB,qBAeCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAUN,EAASI,MACnBI,GAAY,IALhB,sBAaJ,6BACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCvHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d58381c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed : boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, sortTypeF] = useState(SortType.NONE);\n  const [isReversed, isReversedF] = useState(false);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n  const booleanReset = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )\n          }\n          onClick={() => {\n            sortTypeF(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )\n          }\n          onClick={() => {\n            sortTypeF(SortType.LENGTH);\n          }}\n\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': isReversed === false },\n            )\n          }\n          onClick={() => {\n            isReversedF(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {booleanReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              sortTypeF(SortType.NONE);\n              isReversedF(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}